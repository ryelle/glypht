@use './theme.scss';
@use '../generated/syntax-colors.scss';

html {
    overflow: auto;
}

html, body {
    width: 100%;
    height: 100%;

    // Moving the divider to resize the bottom panel in portrait mode is done with a vertical swipe. Reloading on mobile
    // browsers is done with the same gesture.
    overscroll-behavior: none;
}

body {
    margin: 0;
    background-color: theme.$base-color-primary;
    color: theme.$text;
    scrollbar-color: theme.$base-color-tertiary theme.$base-color-primary;

    & ::-webkit-scrollbar {
        background-color: theme.$base-color-primary;
    }

    & ::-webkit-scrollbar-thumb {
        background-color: theme.$base-color-tertiary;
    }

    display: flex;
    flex-direction: column;
}

::selection {
    background-color: theme.$text;
    color: theme.$base-color-primary;
}

body, button, input, select {
    font-family: var(--font);
    font-feature-settings: 'ss07', 'ss08', 'cv10';
    line-height: 1.4;
}

@mixin tabular-nums {
    font-feature-settings: 'ss07', 'ss08', 'cv10', 'tnum';
}

.tabular-nums {
    @include tabular-nums();
}

$textbox-padding-x: 0.675rem;
$textbox-padding-y: 0.5rem;


@mixin textbox {
    background-color: theme.$base-color-tertiary;
    outline: 1px solid theme.$interactive-normal;
    border: none;
    border-radius: 4px;
    color: theme.$text;
    font-size: 0.9rem;
    font-weight: 600;
    padding: $textbox-padding-y $textbox-padding-x;

    &:focus-within {
        outline: 2px solid theme.$interactive-active;
    }

    &:disabled {
        color: theme.$text-detail;
        outline-color: theme.$interactive-muted;

        &::placeholder {
            color: theme.$interactive-muted;
        }
    }

    &::placeholder {
        color: theme.$interactive-normal;
    }
}

@mixin label {
    font-weight: 500;
    font-size: 0.875rem;
}

@mixin detail-label {
    font-weight: 600;
    font-size: 0.875rem;
    color: theme.$text-detail;
}

input[type=text], input[type=password], textarea, select {
    @include textbox();
}

input[type=checkbox] {
    accent-color: theme.$interactive-active;
}

input[type=number] {
    @include tabular-nums();
}

textarea {
    resize: none;
    margin: 0;
    font-family: var(--font);
}

a {
    color: theme.$link;
    text-decoration: underline;
    text-decoration-color: theme.$link-underline;
    @supports (color: rgb(from currentColor r g b)) {
        text-decoration-color: rgb(from currentColor r g b / 50%);
    }

    &:hover {
        text-decoration-thickness: 2px;
    }
}

pre, code {
    font-family: var(--font-mono);
}

body.loading {
    display: flex;
    align-items: center;
    justify-content: center;
}

mark {
    color: var(--text);
    background-color: var(--highlight);
    border-radius: 0.25rem;
    padding: 0.075rem 0.125rem;
    margin: -0.075rem -0.125rem;
}

#loader {
    width: 4rem;
    height: 4rem;

    border-radius: 100%;
    border: 4px solid transparent;
    border-top-color: theme.$interactive-active;

    animation: 1s infinite normal linear spin;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.fancy-table {
    border-collapse: collapse;
    & th {
        text-align: left;
    }

    & tbody > :nth-child(even) {
        background-color: theme.$base-color-secondary;
    }

    & tbody > :nth-child(odd) {
        background-color: theme.$base-color-primary;
    }

    & thead {
        background-color: theme.$base-color-tertiary;
    }

    & th, td {
        padding: 0.25rem;
    }
}

// CSS syntax highlighting classes
.hl-dk { color: var(--hl-keyword); }
.hl-ok { color: var(--hl-function); }
.hl-kw { color: var(--hl-keyword); }
.hl-pn { color: var(--hl-variable); }
.hl-p { color: var(--hl-punctuation); }
.hl-b { color: var(--hl-punctuation); }
.hl-pu { color: var(--hl-punctuation); }
.hl-s { color: var(--hl-string); }
.hl-n { color: var(--hl-number); }
.hl-se { color: var(--hl-punctuation); }
