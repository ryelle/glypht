@use './theme.scss';

.tsd-kind-icon, .tsd-anchor-icon svg {
    width: 24px;
    height: 24px;
}

.api-doc {
    & h1 {
        font-size: 1.875rem;
        margin: 0.67rem 0;
    }

    & h2 {
        font-size: 1.5rem;
        margin: 0.83rem 0;
    }

    & h3 {
        font-size: 1.25rem;
        margin: 1rem 0;
    }

    & h4 {
        font-size: 1.05rem;
        margin: 1.33rem 0;
    }

    & h5 {
        font-size: 1rem;
        margin: 1.5rem 0;
    }

    & h6 {
        font-size: 0.875rem;
        margin: 2.33rem 0;
    }
}

pre, .tsd-signature {
    font-family: var(--font-mono);
    background-color: var(--hl-background);
    padding: 0.5rem;
    border-radius: var(--corner-radius);

    & .tsd-anchor-icon {
        display: none;
    }
}

.tsd-accordion:not([open]) > .tsd-accordion-summary .icon-arrow-down {
    transform: rotate(-90deg);
}

.tsd-accordion-summary {
    list-style-type: none;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    margin: 1rem 0;


    & h1, & h2, & h3, & h4, & h5, & h6 {
        margin: 0;
    }
}

.tsd-index-link {
    display: inline-flex;
    align-items: center;
}

.tsd-member-summary-name {
    display: inline-flex;
    align-items: center;
}

.tsd-anchor-icon {
    display: inline-flex;
    align-self: center;
}

.tsd-sources ul {
    list-style-type: none;
    font-size: 0.875rem;
    color: theme.$text-detail;
    padding: 0;
}

.tsd-tag {
    background-color: var(--base-color-tertiary);
    padding: 0.25rem 0.375rem;
    border-radius: var(--corner-radius);
    border: 1px solid var(--divider);
    align-self: baseline;
    font-size: 0.9rem;
}

#content {
    table {
        border-collapse: collapse;
        width: 100%;
        margin: 1rem 0;
        border: 1px solid theme.$divider;

        & th {
            background-color: theme.$base-color-tertiary;
            color: theme.$text;
            font-weight: 600;
            text-align: left;
            padding: 0.5rem 0.75rem;
            border: 1px solid theme.$divider;
        }

        & td {
            padding: 0.5rem 0.75rem;
            border: 1px solid theme.$divider;
            color: theme.$text;
        }

        & tbody tr:nth-child(even) {
            background-color: theme.$base-color-secondary;
        }

        // Special styling for code in tables
        & code {
            background-color: theme.$base-color-secondary;
            padding: 0.125rem 0.25rem;
            border-radius: 0.125rem;
            font-family: var(--font-mono);
            font-size: 0.875em;
        }
    }
}

// Highlighting for TypeDoc-generated code snippets

// Keywords: extends, infer, readonly, typeof, etc.
.tsd-signature-keyword {
  color: var(--hl-keyword);
}

// Punctuation and operators: [], {}, (), |, &, :, ?, etc.
.tsd-signature-symbol {
  color: var(--hl-operator);
}

// Type names and literal values
.tsd-signature-type, .tsd-signature-typeexternal, .typealias {
  color: var(--hl-type);
}

// Apply colors to TypeDoc kind elements
.tsd-kind-project { color: var(--hl-project); }
.tsd-kind-module { color: var(--hl-module); }
.tsd-kind-namespace { color: var(--hl-namespace); }
.tsd-kind-enum { color: var(--hl-enum); }
.tsd-kind-enum-member { color: var(--hl-enum-member); }
.tsd-kind-variable { color: var(--hl-variable); }
.tsd-kind-function { color: var(--hl-function); }
.tsd-kind-class { color: var(--hl-class); }
.tsd-kind-interface { color: var(--hl-interface); }
.tsd-kind-constructor { color: var(--hl-constructor); }
.tsd-kind-property, .property { color: var(--hl-property); }
.tsd-kind-method { color: var(--hl-method); }
.tsd-kind-reference { color: var(--hl-reference); }
.tsd-kind-call-signature { color: var(--hl-call-signature); }
.tsd-kind-index-signature { color: var(--hl-index-signature); }
.tsd-kind-constructor-signature { color: var(--hl-constructor-signature); }
.tsd-kind-parameter { color: var(--hl-parameter); }
.tsd-kind-type-parameter { color: var(--hl-type-parameter); }
.tsd-kind-accessor { color: var(--hl-accessor); }
.tsd-kind-get-signature { color: var(--hl-get-signature); }
.tsd-kind-set-signature { color: var(--hl-set-signature); }
.tsd-kind-type-alias { color: var(--hl-type-alias); }

